{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0  \
The project is coded in Python and Jupyter Notebook is used as coding environment.\
The libraries used are as follows:\
\

\f1\b import
\f0\b0  numpy as np. => used for easy array manipulations\

\f1\b import
\f0\b0  time. => used for calculating running time of the algorithms\

\f1\b import
\f0\b0  networkx 
\f1\b as
\f0\b0  nx => used for graph visualization\

\f1\b import
\f0\b0  matplotlib.pyplot 
\f1\b as
\f0\b0  plt=> used for graph visualization\

\f1\b import
\f0\b0  random => used for random sampling in pairing model\

\f1\b from
\f0\b0  random 
\f1\b import
\f0\b0  sample => used for random sampling in pairing model\

\f1\b from
\f0\b0  numpy.random 
\f1\b import
\f0\b0  choice => used for randomly choosing with weighted probability in Sequential algorithm\

\f1\b import
\f0\b0  copy => used for copying the list to prevent unintentional value changes\

\f1\b import
\f0\b0  glob => used to read files\

\f1\b from
\f0\b0  pathlib 
\f1\b import
\f0\b0  Path => used to read files\
\
# RUNNING ALGORITHMS \
\
All three of the algorithms are coded in Jupyter Notebook environment in Python. To run the algorithms, only 
\f1\b \'93PATH\'94 
\f0\b0 of the folder in the last code chunk must be changed.\
\
#VISUALIZATION\
\
For visualization section, an example  is given. You can try with different degree sequences. The visualize_graph() function takes the 
\f2\i degree sequence
\f0\i0  and 
\f2\i adjacency matrix
\f0\i0  as argument and prints the visualization of the graph if graphical. If not, it prints \'93the graph with 
\f2\i deg_seq
\f0\i0  can\'92t be drawn.\'94 (e.g., visualize_graph(\{1:[2,3],2:[1,3],3:[1,2]\},[2,2,2])}